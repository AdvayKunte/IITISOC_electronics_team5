$date
	Mon Jul 08 22:07:16 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! clk $end
$var wire 1 " RegWrite $end
$var wire 1 # RegDst $end
$var wire 5 $ OpFn [4:0] $end
$var wire 1 % NIA $end
$var wire 1 & MemWrite $end
$var wire 1 ' MemToReg $end
$var wire 1 ( MemRead $end
$var wire 1 ) ALUSrc $end
$var wire 3 * ALUFn [2:0] $end
$var reg 1 + rst $end
$var integer 32 , i [31:0] $end
$scope module c1 $end
$var reg 1 ! clk $end
$upscope $end
$scope module cp $end
$var wire 1 ! clk $end
$var wire 5 - OpFn [4:0] $end
$var reg 3 . ALUFn [2:0] $end
$var reg 1 ) ALUSrc $end
$var reg 1 ( MemRead $end
$var reg 1 ' MemToReg $end
$var reg 1 & MemWrite $end
$var reg 1 % NIA $end
$var reg 1 # RegDst $end
$var reg 1 " RegWrite $end
$upscope $end
$scope module d $end
$var wire 3 / ALUFn [2:0] $end
$var wire 1 ) ALUSrc $end
$var wire 1 ( MemRead $end
$var wire 1 ' MemToReg $end
$var wire 1 & MemWrite $end
$var wire 1 % NIA $end
$var wire 1 # RegDst $end
$var wire 1 " RegWrite $end
$var wire 1 ! clk $end
$var wire 1 + rst $end
$var wire 16 0 tInst [15:0] $end
$var wire 8 1 tIR [7:0] $end
$var wire 8 2 pincj [7:0] $end
$var wire 8 3 pinci [7:0] $end
$var wire 8 4 pinc [7:0] $end
$var wire 8 5 pin [7:0] $end
$var wire 1 6 alubeq $end
$var wire 8 7 alu_out [7:0] $end
$var wire 8 8 ToMux [7:0] $end
$var wire 8 9 SignExtendedImm [7:0] $end
$var wire 3 : Rd [2:0] $end
$var wire 3 ; Rb [2:0] $end
$var wire 3 < Ra [2:0] $end
$var wire 3 = RDo [2:0] $end
$var wire 5 > OpFn [4:0] $end
$var wire 8 ? MemReg [7:0] $end
$var wire 8 @ Immj [7:0] $end
$var wire 7 A Immi [6:0] $end
$var wire 8 B FinalB [7:0] $end
$var wire 8 C B [7:0] $end
$var wire 8 D A [7:0] $end
$scope module AL $end
$var wire 3 E alufn [2:0] $end
$var wire 8 F Rb [7:0] $end
$var wire 8 G Ra [7:0] $end
$var reg 8 H alu_out [7:0] $end
$var reg 1 6 alubeq $end
$upscope $end
$scope module DE $end
$var wire 3 I rd_i [2:0] $end
$var wire 3 J rb_i [2:0] $end
$var wire 3 K ra_i [2:0] $end
$var wire 16 L inst [15:0] $end
$var wire 8 M immj [7:0] $end
$var wire 7 N immi [6:0] $end
$var reg 5 O opfn [4:0] $end
$upscope $end
$scope module IR $end
$var wire 16 P inst [15:0] $end
$var wire 8 Q add [7:0] $end
$var reg 1 R isreg $end
$var reg 3 S r2wr [2:0] $end
$var integer 32 T i [31:0] $end
$var integer 32 U j [31:0] $end
$upscope $end
$scope module MEM $end
$var wire 8 V address_in [7:0] $end
$var wire 1 ! clk $end
$var wire 1 ( mem_read $end
$var wire 1 & mem_write $end
$var wire 8 W aluout_in [7:0] $end
$var reg 8 X memtoreg_out [7:0] $end
$upscope $end
$scope module MI $end
$var wire 1 ) memtoreg_sel $end
$var wire 8 Y mux_out [7:0] $end
$var wire 8 Z mem_in [7:0] $end
$var wire 8 [ alu_in [7:0] $end
$upscope $end
$scope module MU $end
$var wire 8 \ alu_in [7:0] $end
$var wire 8 ] mem_in [7:0] $end
$var wire 1 ' memtoreg_sel $end
$var wire 8 ^ mux_out [7:0] $end
$upscope $end
$scope module RF $end
$var wire 8 _ Mem_to_Reg [7:0] $end
$var wire 3 ` RA [2:0] $end
$var wire 3 a RB [2:0] $end
$var wire 1 " RegWrite $end
$var wire 1 ! clk $end
$var wire 3 b RDo [2:0] $end
$var reg 8 c A [7:0] $end
$var reg 8 d B [7:0] $end
$upscope $end
$scope module Rmux $end
$var wire 3 e RB [2:0] $end
$var wire 3 f RDi [2:0] $end
$var wire 1 # RegDst $end
$var reg 3 g RDo [2:0] $end
$upscope $end
$scope module SE $end
$var wire 7 h Imm7 [6:0] $end
$var wire 8 i Imm8 [7:0] $end
$upscope $end
$scope module a1 $end
$var wire 8 j in2 [7:0] $end
$var wire 8 k out [7:0] $end
$var wire 8 l in1 [7:0] $end
$upscope $end
$scope module a2 $end
$var wire 8 m in1 [7:0] $end
$var wire 8 n in2 [7:0] $end
$var wire 8 o out [7:0] $end
$upscope $end
$scope module mp1 $end
$var wire 8 p alu_in [7:0] $end
$var wire 8 q mem_in [7:0] $end
$var wire 1 6 memtoreg_sel $end
$var wire 8 r mux_out [7:0] $end
$upscope $end
$scope module mp2 $end
$var wire 8 s alu_in [7:0] $end
$var wire 8 t mem_in [7:0] $end
$var wire 1 % memtoreg_sel $end
$var wire 8 u mux_out [7:0] $end
$upscope $end
$scope module pc1 $end
$var wire 1 ! clk $end
$var wire 8 v in [7:0] $end
$var wire 1 + rst $end
$var reg 8 w out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 w
b1 v
b1 u
b10000001 t
b1 s
b1 r
b1 q
b1011 p
b1011 o
b1 n
b1010 m
b0 l
b1 k
b1 j
b1010 i
b1010 h
bx g
b10 f
b1 e
bx d
b0 c
bx b
b1 a
b0 `
b1010 _
b1010 ^
bx ]
b1010 \
b1010 [
bx Z
b1010 Y
bx X
bx W
b1010 V
bx U
b0 T
bx S
0R
b0 Q
b10001010000001 P
b1xx O
b1010 N
b10000001 M
b10001010000001 L
b0 K
b1 J
b10 I
b1010 H
b0 G
b1010 F
b100 E
b0 D
bx C
b1010 B
b1010 A
b10000001 @
b1010 ?
b1xx >
bx =
b0 <
b1 ;
b10 :
b1010 9
bx 8
b1010 7
06
b1 5
b1 4
b1011 3
b1 2
b0 1
b10001010000001 0
b100 /
b100 .
b1xx -
b100000000 ,
1+
b100 *
1)
0(
1'
0&
1%
b1xx $
0#
1"
0!
$end
#1500
1!
#2000
b1 =
b1 b
b1 g
1R
b10 S
b1 T
#3000
0!
#4000
0R
b110 T
b100 U
#4500
1!
#6000
0!
b1010 T
b1000 U
#6500
b1010 C
b1010 W
b1010 Z
b1010 d
#7500
1!
#8000
b1011 T
#9000
0!
#10000
b1100 T
0+
#10500
b101 ?
b101 ^
b101 _
b101 7
b101 H
b101 V
b101 \
b10 5
b10 u
b10 v
b101 B
b101 F
b101 Y
bx C
bx W
bx Z
bx d
b10 2
b10 r
b10 s
b1000010 @
b1000010 M
b1000010 t
b101 9
b101 [
b101 i
b101 m
b101 A
b101 N
b101 h
b101 :
b101 I
b101 f
b10 ;
b10 J
b10 a
b10 e
b111 3
b111 o
b111 p
b10 4
b10 k
b10 n
b10 q
b10000101000010 0
b10000101000010 L
b10000101000010 P
b1 1
b1 Q
b1 l
b1 w
1!
#12000
0!
b1101 T
#12500
b10 =
b10 b
b10 g
#13500
b0 ?
b0 ^
b0 _
b0 7
b0 H
b0 V
b0 \
0)
b0 *
b0 .
b0 /
b0 E
1#
b11 5
b11 u
b11 v
b0 B
b0 F
b0 Y
b0 C
b0 W
b0 Z
b0 d
b11 2
b11 r
b11 s
b0 @
b0 M
b0 t
b0 9
b0 [
b0 i
b0 m
b0 A
b0 N
b0 h
b0 :
b0 I
b0 f
b0 ;
b0 J
b0 a
b0 e
b0 $
b0 -
b0 >
b0 O
b11 3
b11 o
b11 p
b11 4
b11 k
b11 n
b11 q
b0 0
b0 L
b0 P
b10 1
b10 Q
b10 l
b10 w
1!
#14000
b1110 T
#15000
0!
#15500
b0 =
b0 b
b0 g
#16000
b1111 T
#16500
b100 5
b100 u
b100 v
b100 2
b100 r
b100 s
b100 3
b100 o
b100 p
b100 4
b100 k
b100 n
b100 q
b11 1
b11 Q
b11 l
b11 w
1!
#18000
0!
b10000 T
#19500
b101 5
b101 u
b101 v
b101 2
b101 r
b101 s
b101 3
b101 o
b101 p
b101 4
b101 k
b101 n
b101 q
b100 1
b100 Q
b100 l
b100 w
1!
#20000
b10001 T
#21000
0!
#22000
b10010 T
#22500
b1111 ?
b1111 ^
b1111 _
b1111 7
b1111 H
b1111 V
b1111 \
b1010 B
b1010 F
b1010 Y
b110 5
b110 u
b110 v
b1010 C
b1010 W
b1010 Z
b1010 d
b101 D
b101 G
b101 c
b110 2
b110 r
b110 s
b11010001 @
b11010001 M
b11010001 t
b11 9
b11 [
b11 i
b11 m
b11 A
b11 N
b11 h
b11 :
b11 I
b11 f
b1 ;
b1 J
b1 a
b1 e
b10 <
b10 K
b10 `
b1001 3
b1001 o
b1001 p
b110 4
b110 k
b110 n
b110 q
b11010001 0
b11010001 L
b11010001 P
b101 1
b101 Q
b101 l
b101 w
1!
#24000
0!
b10011 T
#24500
b11 =
b11 b
b11 g
#25500
16
bx ?
bx ^
bx _
b101 7
b101 H
b101 V
b101 \
b111 *
b111 .
b111 /
b111 E
0"
0#
0'
b101 B
b101 F
b101 Y
b111 5
b111 u
b111 v
b101 C
b101 W
b101 Z
b101 d
b0 D
b0 G
b0 c
b111 2
b111 r
b111 s
b10 @
b10 M
b10 t
b0 9
b0 [
b0 i
b0 m
b0 A
b0 N
b0 h
b0 :
b0 I
b0 f
b10 ;
b10 J
b10 a
b10 e
b0 <
b0 K
b0 `
b100xx $
b100xx -
b100xx >
b100xx O
b111 3
b111 o
b111 p
b111 4
b111 k
b111 n
b111 q
b1000000000000010 0
b1000000000000010 L
b1000000000000010 P
b110 1
b110 Q
b110 l
b110 w
1!
#26000
b10100 T
#27000
0!
#27500
b10 =
b10 b
b10 g
#28000
b10101 T
#28500
b0 7
b0 H
b0 V
b0 \
b0 ?
b0 ^
b0 _
06
b0 *
b0 .
b0 /
b0 E
1"
1#
1'
b0 B
b0 F
b0 Y
b1000 5
b1000 u
b1000 v
b0 C
b0 W
b0 Z
b0 d
b1000 2
b1000 r
b1000 s
b0 @
b0 M
b0 t
b0 ;
b0 J
b0 a
b0 e
b0 $
b0 -
b0 >
b0 O
b1000 3
b1000 o
b1000 p
b1000 4
b1000 k
b1000 n
b1000 q
b0 0
b0 L
b0 P
b111 1
b111 Q
b111 l
b111 w
1!
#30000
0!
b10110 T
#30500
b0 =
b0 b
b0 g
#31500
b1001 5
b1001 u
b1001 v
b1001 2
b1001 r
b1001 s
b1001 3
b1001 o
b1001 p
b1001 4
b1001 k
b1001 n
b1001 q
b1000 1
b1000 Q
b1000 l
b1000 w
1!
#32000
b10111 T
#33000
0!
#34000
b11000 T
#34500
bx ?
bx ^
bx _
b1 7
b1 H
b1 V
b1 \
1)
1(
b101 *
b101 .
b101 /
b101 E
0#
0'
b1 B
b1 F
b1 Y
b1010 5
b1010 u
b1010 v
b1010 C
b1010 W
b1010 Z
b1010 d
b1010 2
b1010 r
b1010 s
b1000001 @
b1000001 M
b1000001 t
b1 9
b1 [
b1 i
b1 m
b1 A
b1 N
b1 h
b1 :
b1 I
b1 f
b1 ;
b1 J
b1 a
b1 e
b10xx $
b10xx -
b10xx >
b10xx O
b1011 3
b1011 o
b1011 p
b1010 4
b1010 k
b1010 n
b1010 q
b100000001000001 0
b100000001000001 L
b100000001000001 P
b1001 1
b1001 Q
b1001 l
b1001 w
1!
#36000
0!
b11001 T
#36500
b1 ?
b1 ^
b1 _
b1 8
b1 X
b1 ]
b1 =
b1 b
b1 g
#37500
bx 7
bx H
bx V
bx \
b1011 5
b1011 u
b1011 v
b0xxxxxxx B
b0xxxxxxx F
b0xxxxxxx Y
bx C
bx W
bx Z
bx d
bx D
bx G
bx c
b1011 2
b1011 r
b1011 s
bx @
bx M
bx t
b0xxxxxxx 9
b0xxxxxxx [
b0xxxxxxx i
b0xxxxxxx m
bx A
bx N
bx h
bx :
bx I
bx f
bx ;
bx J
bx a
bx e
bx <
bx K
bx `
bx $
bx -
bx >
bx O
bx 3
bx o
bx p
b1011 4
b1011 k
b1011 n
b1011 q
bx 0
bx L
bx P
b1010 1
b1010 Q
b1010 l
b1010 w
1!
#38000
b11010 T
#39000
0!
#39500
bx ?
bx ^
bx _
bx 8
bx X
bx ]
bx =
bx b
bx g
#40000
b11011 T
#40500
b1100 5
b1100 u
b1100 v
b1100 2
b1100 r
b1100 s
b1100 4
b1100 k
b1100 n
b1100 q
b1011 1
b1011 Q
b1011 l
b1011 w
1!
#42000
0!
b11100 T
#43500
b1101 5
b1101 u
b1101 v
b1101 2
b1101 r
b1101 s
b1101 4
b1101 k
b1101 n
b1101 q
b1100 1
b1100 Q
b1100 l
b1100 w
1!
#44000
b11101 T
#45000
0!
#46000
b11110 T
#46500
b1110 5
b1110 u
b1110 v
b1110 2
b1110 r
b1110 s
b1110 4
b1110 k
b1110 n
b1110 q
b1101 1
b1101 Q
b1101 l
b1101 w
1!
#48000
0!
b11111 T
#49500
b1111 5
b1111 u
b1111 v
b1111 2
b1111 r
b1111 s
b1111 4
b1111 k
b1111 n
b1111 q
b1110 1
b1110 Q
b1110 l
b1110 w
1!
#50000
b100000 T
